/*
 * Copyright (C) 2017 Sora Steenvoort
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package moodlehelper;

import java.awt.Rectangle;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sora Steenvoort
 */
public class TableView extends javax.swing.JFrame {
    List<String> lNames, fNames, matNos;
    String[] grades, columns;
    DefaultTableModel model;
    boolean click;
    
    public boolean getClick(){
        return click;
    }
    
    public void unsetClick(){
        click = false;
    }
    
    public void showTable(List<String> LNames, List<String> FNames, List<String> MatNos, String[] Grades){
        lNames = LNames;
        fNames = FNames;
        matNos = MatNos;
        grades = Grades;
        String[][] data = new String[lNames.size()][4];
        for(int i=0;i<lNames.size();i++){
            data[i][0] = lNames.get(i);
            data[i][1] = fNames.get(i);
            data[i][2] = matNos.get(i);
            data[i][3] = grades[i];
        }
        columns = new String [] {
            "Last name", "First name", "Matr. number", "Mark"
        };
        model = (DefaultTableModel)jTable1.getModel();
        model.setDataVector(data,columns);
        this.setVisible(true);
    }
    
    public void updateTable(int n){
        String[][] data = new String[lNames.size()][4];
        for(int i=0;i<lNames.size();i++){
            data[i][0] = lNames.get(i);
            data[i][1] = fNames.get(i);
            data[i][2] = matNos.get(i);
            data[i][3] = grades[i];
        }
        model.setDataVector(data,columns);
        jTable1.setRowSelectionInterval(n,n);
        jTable1.scrollRectToVisible(new Rectangle(jTable1.getCellRect(n, 0, true)));
    }

    public ListSelectionModel getSelectionModel(){
        return jTable1.getSelectionModel();
    }
    
    public void closeTable(){
        this.setVisible(false);
    }
    
    /**
     * Creates new form TableView
     */
    public TableView(WindowAdapter wa) {
        initComponents();
            this.addWindowListener(wa);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Last name", "First name", "Matr. number", "Mark"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        click = true;
    }//GEN-LAST:event_jTable1FocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
