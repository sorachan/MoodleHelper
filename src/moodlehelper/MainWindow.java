/*
 * Copyright (C) 2017 Sora Steenvoort
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package moodlehelper;

import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Sora Steenvoort
 */
public class MainWindow extends javax.swing.JFrame implements DocumentListener{
    List<String> headerList;
    List<List<String>> originalContents;
    int uid = -1, grade = -1, fName = -1, lName = -1, matNo = -1;
    List<String> uidList, gradeList, fNameList, lNameList, matNoList;
    String[] studentLabels, grades;
    int activeStudent = -1;
    File activeFile;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        Component This = this;
        initComponents();
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e)
            {
                int quit = JOptionPane.showConfirmDialog(This,"Any unsaved progress will be lost!","Do you really want to quit?",JOptionPane.YES_NO_OPTION);
                if(quit==JOptionPane.YES_OPTION){
                    dispose();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        openBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        saveAsBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        gradeBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        studentLabel = new javax.swing.JLabel();
        findBox = new javax.swing.JTextField();
        findBox.getDocument().addDocumentListener(this);
        jLabel4 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        openBtn.setText("open");
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("save");
        saveBtn.setToolTipText("");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        saveAsBtn.setText("save as");
        saveAsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Find student:");

        gradeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Mark:");

        jLabel3.setText("Student:");

        findBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Status:");

        jLabel5.setText("<html> <b>Usage:</b><br \\> - Find student by substring of name or matriculation number<br \\> - Press the <i>Enter</i> key to switch to mark input<br \\> - Input the mark (or - to delete) and press <i>Enter</i><br \\> - When you are done, remember to save the file! </html> ");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel5.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(openBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveBtn)
                        .addGap(18, 18, 18)
                        .addComponent(saveAsBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                            .addComponent(findBox)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                            .addComponent(gradeBox))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openBtn)
                    .addComponent(saveBtn)
                    .addComponent(saveAsBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(findBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(studentLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(gradeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(statusLabel))
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean saveTo(File f){
        try{
            FileWriter fw = new FileWriter(f);
            CSVHelper.writeLine(fw,headerList);
            List<String> newLine,oldLine;
            for(int lc=0;lc<originalContents.size();lc++){
                oldLine = originalContents.get(lc);
                newLine = new ArrayList<>();
                for(int i=0;i<headerList.size();i++){
                    if(i==grade){
                        newLine.add(grades[lc]);
                    }else{
                        newLine.add(oldLine.get(i));
                    }
                }
                CSVHelper.writeLine(fw,newLine);
            }
            fw.flush();
            fw.close();
            return true;
        }catch(Exception e){
            return false;
        }
    }
    
    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        try{
            JFileChooser fc = new JFileChooser();
            fc.setFileFilter(new FileNameExtensionFilter("csv files","csv"));
            int retVal = fc.showOpenDialog(null);
            if(retVal == JFileChooser.APPROVE_OPTION){
                File iFile = fc.getSelectedFile();
                activeFile = iFile;
                FileReader fr = new FileReader(iFile);
                originalContents = new ArrayList<>();
                headerList=CSVHelper.parseLine(fr);
                String[] header = headerList.toArray(new String[0]);
                FormatWindow fw = new FormatWindow(this,true);
                int[] setup = fw.showDialog(header);
                uid = setup[0];
                fName = setup[1];
                lName = setup[2];
                matNo = setup[3];
                grade = setup[4];
                uidList = new ArrayList<>();
                fNameList = new ArrayList<>();
                lNameList = new ArrayList<>();
                matNoList = new ArrayList<>();
                gradeList = new ArrayList<>();
                List<String> line;
                while((line=CSVHelper.parseLine(fr))!=null){
                    uidList.add(line.get(uid));
                    fNameList.add(line.get(fName));
                    lNameList.add(line.get(lName));
                    matNoList.add(line.get(matNo));
                    gradeList.add(line.get(grade));
                    originalContents.add(line);
                }
                studentLabels = new String[uidList.size()];
                grades = new String[uidList.size()];
                for(int i=0;i<studentLabels.length;i++){
                    studentLabels[i] = 
                            lNameList.get(i)+", "+
                            fNameList.get(i)+
                            (matNoList.get(i).length()>0?
                                " ("+matNoList.get(i)+")":
                             "");
                    grades[i] = gradeList.get(i);
                }
                fr.close();
            }else{
                
            }
            if(activeFile==null)throw new Exception();
        }catch(Exception e){
            System.exit(0);
        }
    }//GEN-LAST:event_openBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        if(saveTo(activeFile)){
            statusLabel.setText("saved file successfully!");
        }else{
            statusLabel.setText("something went wrong...");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void gradeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradeBoxActionPerformed
        try{
            if(gradeBox.getText().equals("-")){
                grades[activeStudent]="-";
                statusLabel.setText("OK: deleted mark");
            }else{
                float grVal = Float.parseFloat(gradeBox.getText().replace(",","."));
                if(grVal<0)throw new Exception();
                grades[activeStudent]=String.format(Locale.ROOT,"%.2f",grVal);
                statusLabel.setText("OK: mark set to "+String.format(Locale.ROOT,"%.2f",grVal));
            }
            findBox.setText("");
            gradeBox.setText("");
            findBox.requestFocus();
        }catch(Exception e){
            statusLabel.setText("Please enter a valid mark!");
        }
    }//GEN-LAST:event_gradeBoxActionPerformed

    private void findBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBoxActionPerformed
        gradeBox.requestFocus();
    }//GEN-LAST:event_findBoxActionPerformed

    private void saveAsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsBtnActionPerformed
        try{
            JFileChooser fc = new JFileChooser();
            fc.setFileFilter(new FileNameExtensionFilter("csv files","csv"));
            int retVal = fc.showSaveDialog(null);
            if(retVal == JFileChooser.APPROVE_OPTION){
                String filename = fc.getSelectedFile().toString();
                if(!filename.endsWith(".csv"))
                filename += ".csv";
                activeFile = new File(filename);
                if(saveTo(activeFile)){
                    statusLabel.setText("saved file successfully!");
                }
            }
        }catch(Exception e){
            statusLabel.setText("something went wrong...");
        }
    }//GEN-LAST:event_saveAsBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainWindow mw = new MainWindow();
                mw.openBtnActionPerformed(null);
                mw.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField findBox;
    private javax.swing.JTextField gradeBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton openBtn;
    private javax.swing.JButton saveAsBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel studentLabel;
    // End of variables declaration//GEN-END:variables

    private void setActiveStudent(){
        for(int i=0;i<studentLabels.length;i++){
            boolean match = true;
            for(String sub: findBox.getText().split(" "))
                match &= studentLabels[i].toLowerCase().contains(sub);
            if(match){
                activeStudent = i;
                studentLabel.setText(studentLabels[i]);
                break;
            }
        }
    }
    
    @Override
    public void insertUpdate(DocumentEvent e) {
        setActiveStudent();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        setActiveStudent();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
